import CushionLink from '@/components/CushionLink'
import OnlyAdmin from '@/components/OnlyAdmin'
import PageInfo from '@/components/PageInfo'
import Button from '@/components/ui/button/Button'
import prisma from '@/prisma'
import { Page } from '@/types/general'
import { JhmGetServerSideProps } from '@/types/next'
import { withSessionPage } from '@/utils/node/with-session'
import { Article, Prisma } from '@prisma/client'
import dayjs from 'dayjs'
import Link from 'next/link'
import $ from './articles.module.scss'

type ArticleWithoutContent = Omit<Article, 'content' | 'isDeleted'>

type ArticlesMainPageProps = {
  articles: ArticleWithoutContent[]
}

const ArticlesMainPage: Page<ArticlesMainPageProps> = ({ articles }) => {
  const publishedArticles: ArticleWithoutContent[] = []
  const unPublishedArticles: ArticleWithoutContent[] = []

  articles.forEach((article) => {
    if (article.publishedAt) {
      publishedArticles.push(article)
    } else {
      unPublishedArticles.push(article)
    }
  })

  return (
    <div>
      <PageInfo title="Articles | Jang Haemin" />

      {/* {isAdmin && <Button className={$.newButton}>New</Button>} */}

      <OnlyAdmin>
        <Link href="/articles/editor">
          <Button className={$.newButton}>New</Button>
        </Link>
      </OnlyAdmin>

      <OnlyAdmin>
        <ol className={$.articlesList}>
          {unPublishedArticles.map(({ id, title, key }) => (
            <li key={key} className={$.articleListItem}>
              <CushionLink href={`/articles/editor?articleId=${id}`}>
                <div className={$.articleItem}>
                  <span className={$.articleWrittenAt}>Unpublished</span>
                  <span className={$.articleTitle}>{title}</span>
                </div>
              </CushionLink>
            </li>
          ))}
        </ol>
      </OnlyAdmin>

      <ol className={$.articlesList}>
        {publishedArticles.map(({ title, key, publishedAt }) => (
          <li key={key} className={$.articleListItem}>
            <CushionLink href={`/articles/${key}`}>
              <div className={$.articleItem}>
                <span className={$.articleWrittenAt}>
                  {dayjs(publishedAt).format('YYYY. MM. DD')}
                </span>
                <span className={$.articleTitle}>{title}</span>
              </div>
            </CushionLink>
          </li>
        ))}
      </ol>
    </div>
  )
}

export default ArticlesMainPage

export const get: JhmGetServerSideProps<ArticlesMainPageProps> = async ({
  req,
}) => {
  const props: ArticlesMainPageProps = {
    articles: [],
  }
  const where: Prisma.ArticleWhereInput = {
    isDeleted: false,
  }
  const admin = await prisma.admin.findUnique({
    where: {
      userId: req.userId ?? -1,
    },
  })

  if (!admin) {
    where.NOT = [{ publishedAt: null }]
  }

  props.articles = await prisma.article.findMany({
    where,
    orderBy: {
      writtenAt: 'desc',
    },
    select: {
      id: true,
      title: true,
      key: true,
      writtenAt: true,
      publishedAt: true,
    },
  })

  return { props }
}

export const getServerSideProps = withSessionPage(get)
